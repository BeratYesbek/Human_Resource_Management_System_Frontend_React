{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berat\\\\Documents\\\\MyProjects\\\\Human_Resource_Management_System_Frontend_React-main\\\\react-app\\\\src\\\\utilities\\\\BCustomSelect.jsx\",\n    _s = $RefreshSig$();\n\nimport { Field, useField } from 'formik';\nimport React from 'react';\nimport { FormField, Label } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BCustomSelect({ ...props\n}) {\n  _s();\n\n  const [field, meta] = useField(props);\n  const countryOptions = [{\n    key: 1,\n    value: 'af',\n    text: 'Afghanistan'\n  }, {\n    key: 2,\n    value: 'ax',\n    text: 'Aland Islands'\n  }, {\n    key: 3,\n    value: 'al',\n    text: 'Albania'\n  }, {\n    key: 4,\n    value: 'dz',\n    text: 'Algeria'\n  }, {\n    key: 5,\n    value: 'as',\n    text: 'American Samoa'\n  }, {\n    key: 6,\n    value: 'ad',\n    text: 'Andorra'\n  }, {\n    key: 7,\n    value: 'ao',\n    text: 'Angola'\n  }];\n  return /*#__PURE__*/_jsxDEV(FormField, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        component: \"select\",\n        ...field,\n        ...props,\n        children: [countryOptions.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: country.text\n        }, country.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)), meta.touched && !!meta.error ? /*#__PURE__*/_jsxDEV(Label, {\n          pointing: true,\n          basic: true,\n          color: \"red\",\n          content: meta.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BCustomSelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = BCustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"BCustomSelect\");","map":{"version":3,"sources":["C:/Users/berat/Documents/MyProjects/Human_Resource_Management_System_Frontend_React-main/react-app/src/utilities/BCustomSelect.jsx"],"names":["Field","useField","React","FormField","Label","BCustomSelect","props","field","meta","countryOptions","key","value","text","map","country","touched","error"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,QAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,mBAAjC;;AAEA,eAAe,SAASC,aAAT,CAAuB,EAAE,GAAGC;AAAL,CAAvB,EAAqC;AAAA;;AAChD,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBP,QAAQ,CAACK,KAAD,CAA9B;AAEA,QAAMG,cAAc,GAAG,CACnB;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GADmB,EAEnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAFmB,EAGnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAHmB,EAInB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAJmB,EAKnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GALmB,EAMnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GANmB,EAOnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAPmB,CAAvB;AAWA,sBAEI,QAAC,SAAD;AAAA,2BACI;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA,WAA+BL,KAA/B;AAAA,WAA0CD,KAA1C;AAAA,mBACKG,cAAc,CAACI,GAAf,CAAoBC,OAAD,iBAChB;AAAA,oBAA2BA,OAAO,CAACF;AAAnC,WAAaE,OAAO,CAACJ,GAArB;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,EAIKF,IAAI,CAACO,OAAL,IAAgB,CAAC,CAACP,IAAI,CAACQ,KAAvB,gBACG,QAAC,KAAD;AAAO,UAAA,QAAQ,MAAf;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,KAAK,EAAC,KAA5B;AAAkC,UAAA,OAAO,EAAER,IAAI,CAACQ;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADH,GAEG,IANR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH;;GA/BuBX,a;UACEJ,Q;;;KADFI,a","sourcesContent":["import { Field, useField } from 'formik'\r\nimport React from 'react'\r\nimport { FormField, Label } from 'semantic-ui-react'\r\n\r\nexport default function BCustomSelect({ ...props }) {\r\n    const [field, meta] = useField(props)\r\n\r\n    const countryOptions = [\r\n        { key: 1, value: 'af', text: 'Afghanistan' },\r\n        { key: 2, value: 'ax', text: 'Aland Islands' },\r\n        { key: 3, value: 'al', text: 'Albania' },\r\n        { key: 4, value: 'dz', text: 'Algeria' },\r\n        { key: 5, value: 'as', text: 'American Samoa' },\r\n        { key: 6, value: 'ad', text: 'Andorra' },\r\n        { key: 7, value: 'ao', text: 'Angola' },\r\n\r\n    ]\r\n\r\n    return (\r\n\r\n        <FormField>\r\n            <div>\r\n                <select component=\"select\" {...field} {...props}>\r\n                    {countryOptions.map((country) => (\r\n                        <option key={country.key}>{country.text}</option>\r\n                    ))}\r\n                    {meta.touched && !!meta.error ? (\r\n                        <Label pointing basic color=\"red\" content={meta.error}></Label>\r\n                    ) : null}\r\n                </select>\r\n            </div>\r\n        </FormField>\r\n        \r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}