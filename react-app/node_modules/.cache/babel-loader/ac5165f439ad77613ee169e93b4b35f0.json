{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berat\\\\Documents\\\\MyProjects\\\\Human_Resource_Management_System_Frontend_React-main\\\\react-app\\\\src\\\\utilities\\\\BCustomSelect.jsx\",\n    _s = $RefreshSig$();\n\nimport { Field, useField } from 'formik';\nimport React from 'react';\nimport { FormField, Label } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BCustomSelect({ ...props\n}) {\n  _s();\n\n  const [field, meta] = useField(props);\n  const countryOptions = [{\n    key: 1,\n    value: 'af',\n    text: 'Afghanistan'\n  }, {\n    key: 2,\n    value: 'ax',\n    text: 'Aland Islands'\n  }, {\n    key: 3,\n    value: 'al',\n    text: 'Albania'\n  }, {\n    key: 4,\n    value: 'dz',\n    text: 'Algeria'\n  }, {\n    key: 5,\n    value: 'as',\n    text: 'American Samoa'\n  }, {\n    key: 6,\n    value: 'ad',\n    text: 'Andorra'\n  }, {\n    key: 7,\n    value: 'ao',\n    text: 'Angola'\n  }];\n\n  function onChange(value) {\n    console.log(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FormField, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      as: \"select\",\n      onChange: e => onChange(e.target.value),\n      ...field,\n      ...props,\n      children: [countryOptions.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.text,\n        children: country.text\n      }, country.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)), meta.touched && !!meta.error ? /*#__PURE__*/_jsxDEV(Label, {\n        pointing: true,\n        basic: true,\n        color: \"red\",\n        content: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BCustomSelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = BCustomSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"BCustomSelect\");","map":{"version":3,"sources":["C:/Users/berat/Documents/MyProjects/Human_Resource_Management_System_Frontend_React-main/react-app/src/utilities/BCustomSelect.jsx"],"names":["Field","useField","React","FormField","Label","BCustomSelect","props","field","meta","countryOptions","key","value","text","onChange","console","log","e","target","map","country","touched","error"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,QAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,mBAAjC;;AAEA,eAAe,SAASC,aAAT,CAAuB,EAAE,GAAGC;AAAL,CAAvB,EAAqC;AAAA;;AAChD,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBP,QAAQ,CAACK,KAAD,CAA9B;AAEA,QAAMG,cAAc,GAAG,CACnB;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GADmB,EAEnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAFmB,EAGnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAHmB,EAInB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAJmB,EAKnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GALmB,EAMnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GANmB,EAOnB;AAAEF,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,KAAK,EAAE,IAAjB;AAAuBC,IAAAA,IAAI,EAAE;AAA7B,GAPmB,CAAvB;;AAUA,WAASC,QAAT,CAAkBF,KAAlB,EAAyB;AACrBG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;;AAED,sBAEI,QAAC,SAAD;AAAA,2BAEI;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,QAAQ,EAAGK,CAAD,IAAOH,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASN,KAAV,CAA7C;AAAA,SAAoEJ,KAApE;AAAA,SAA+ED,KAA/E;AAAA,iBACKG,cAAc,CAACS,GAAf,CAAoBC,OAAD,iBAChB;AAAQ,QAAA,KAAK,EAAEA,OAAO,CAACP,IAAvB;AAAA,kBAAgDO,OAAO,CAACP;AAAxD,SAAkCO,OAAO,CAACT,GAA1C;AAAA;AAAA;AAAA;AAAA,cADH,CADL,EAIKF,IAAI,CAACY,OAAL,IAAgB,CAAC,CAACZ,IAAI,CAACa,KAAvB,gBACG,QAAC,KAAD;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,KAAK,EAAC,KAA5B;AAAkC,QAAA,OAAO,EAAEb,IAAI,CAACa;AAAhD;AAAA;AAAA;AAAA;AAAA,cADH,GAEG,IANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH;;GAlCuBhB,a;UACEJ,Q;;;KADFI,a","sourcesContent":["import { Field, useField } from 'formik'\r\nimport React from 'react'\r\nimport { FormField, Label } from 'semantic-ui-react'\r\n\r\nexport default function BCustomSelect({ ...props }) {\r\n    const [field, meta] = useField(props)\r\n\r\n    const countryOptions = [\r\n        { key: 1, value: 'af', text: 'Afghanistan' },\r\n        { key: 2, value: 'ax', text: 'Aland Islands' },\r\n        { key: 3, value: 'al', text: 'Albania' },\r\n        { key: 4, value: 'dz', text: 'Algeria' },\r\n        { key: 5, value: 'as', text: 'American Samoa' },\r\n        { key: 6, value: 'ad', text: 'Andorra' },\r\n        { key: 7, value: 'ao', text: 'Angola' },\r\n\r\n    ]\r\n    function onChange(value) {\r\n        console.log(value)\r\n    }\r\n\r\n    return (\r\n\r\n        <FormField>\r\n\r\n            <select as=\"select\" onChange={(e) => onChange(e.target.value)}  {...field} {...props} >\r\n                {countryOptions.map((country) => (\r\n                    <option value={country.text} key={country.key}>{country.text}</option>\r\n                ))}\r\n                {meta.touched && !!meta.error ? (\r\n                    <Label pointing basic color=\"red\" content={meta.error}></Label>\r\n                ) : null}\r\n            </select>\r\n\r\n        </FormField>\r\n\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}