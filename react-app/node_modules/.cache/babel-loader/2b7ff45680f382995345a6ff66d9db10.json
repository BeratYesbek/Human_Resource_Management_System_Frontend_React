{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berat\\\\Documents\\\\MyProjects\\\\Human_Resource_Management_System_Frontend_React-main\\\\react-app\\\\src\\\\pages\\\\JobApplications.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { useParams } from \"react-router\";\nimport ApplicationService from '../services/ApplicationService';\nimport { Card, Icon, Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobApplications() {\n  _s();\n\n  let {\n    jobAdvertisementId\n  } = useParams();\n  const [applications, setApplications] = useState([]);\n  useEffect(() => {\n    let applicationService = new ApplicationService();\n    applicationService.getApplicationByJobAdvertisementId(jobAdvertisementId).then(result => setApplications(result.data.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: applications ? applications.map(application => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card.Group, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              floated: \"right\",\n              size: \"mini\",\n              src: \"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n              children: application.jobSeeker.firstName + \" \" + application.jobSeeker.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n              children: `Date of Birth: ${application.jobSeeker.dateOfBirth.toString().slice(0, 10)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: application.jobSeeker.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ui two buttons\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                basic: true,\n                color: \"green\",\n                children: \"See Cv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(JobApplications, \"W/BosUwzmLRwXxlA+BZnQT3Th2U=\", false, function () {\n  return [useParams];\n});\n\n_c = JobApplications;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobApplications\");","map":{"version":3,"sources":["C:/Users/berat/Documents/MyProjects/Human_Resource_Management_System_Frontend_React-main/react-app/src/pages/JobApplications.jsx"],"names":["React","useEffect","useState","useParams","ApplicationService","Card","Icon","Button","JobApplications","jobAdvertisementId","applications","setApplications","applicationService","getApplicationByJobAdvertisementId","then","result","data","map","application","jobSeeker","firstName","lastName","dateOfBirth","toString","slice","email"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,mBAAnC;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAEtC,MAAI;AAAEC,IAAAA;AAAF,MAAyBN,SAAS,EAAtC;AAEA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,EAAD,CAAhD;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,kBAAkB,GAAG,IAAIR,kBAAJ,EAAzB;AACAQ,IAAAA,kBAAkB,CAACC,kCAAnB,CAAsDJ,kBAAtD,EAA0EK,IAA1E,CAA+EC,MAAM,IAAIJ,eAAe,CAACI,MAAM,CAACC,IAAP,CAAYA,IAAb,CAAxG;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,cACKN,YAAY,GAAGA,YAAY,CAACO,GAAb,CAAkBC,WAAD,iBAC7B;AAAA,6BAEI,QAAC,IAAD,CAAM,KAAN;AAAA,+BACI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,OAAN;AAAA,oCACI,QAAC,KAAD;AACI,cAAA,OAAO,EAAC,OADZ;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI,QAAC,IAAD,CAAM,MAAN;AAAA,wBAAcA,WAAW,CAACC,SAAZ,CAAsBC,SAAtB,GAAkC,GAAlC,GAAwCF,WAAW,CAACC,SAAZ,CAAsBE;AAA5E;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI,QAAC,IAAD,CAAM,IAAN;AAAA,wBAAa,kBAAiBH,WAAW,CAACC,SAAZ,CAAsBG,WAAtB,CAAkCC,QAAlC,GAA6CC,KAA7C,CAAmD,CAAnD,EAAsD,EAAtD,CAA0D;AAAxF;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI,QAAC,IAAD,CAAM,WAAN;AAAA,wBACCN,WAAW,CAACC,SAAZ,CAAsBM;AADvB;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAaI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,KAAK,MAAnB;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,qCACI,QAAC,MAAD;AAAQ,gBAAA,KAAK,MAAb;AAAc,gBAAA,KAAK,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADY,CAAH,GA+BR;AAhCT;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GAlDuBjB,e;UAESL,S;;;KAFTK,e","sourcesContent":["import { React, useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router\";\r\nimport ApplicationService from '../services/ApplicationService'\r\nimport { Card, Icon, Button } from 'semantic-ui-react'\r\n\r\nexport default function JobApplications() {\r\n\r\n    let { jobAdvertisementId } = useParams()\r\n\r\n    const [applications, setApplications] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        let applicationService = new ApplicationService()\r\n        applicationService.getApplicationByJobAdvertisementId(jobAdvertisementId).then(result => setApplications(result.data.data))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {applications ? applications.map((application) => (\r\n                <div >\r\n        \r\n                    <Card.Group>\r\n                        <Card>\r\n                            <Card.Content>\r\n                                <Image\r\n                                    floated='right'\r\n                                    size='mini'\r\n                                    src='https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\r\n                                />\r\n                                <Card.Header>{application.jobSeeker.firstName + \" \" + application.jobSeeker.lastName}</Card.Header>\r\n                                <Card.Meta>{`Date of Birth: ${application.jobSeeker.dateOfBirth.toString().slice(0, 10)}`}</Card.Meta>\r\n                                <Card.Description>\r\n                                {application.jobSeeker.email}\r\n                                </Card.Description>\r\n                            </Card.Content>\r\n                            <Card.Content extra>\r\n                                <div className='ui two buttons'>\r\n                                    <Button basic color='green'>\r\n                                        See Cv\r\n                                    </Button>\r\n                                </div>\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </Card.Group>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            )) : null}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}