[{"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\index.js":"1","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\App.js":"2","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\reportWebVitals.js":"3","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\layouts\\Navi.jsx":"4","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\Dashboard.jsx":"5","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\SignOut.jsx":"6","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\SignIn.jsx":"7","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\UserProfile.jsx":"8","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\MyApplications.jsx":"9","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\JobAdvertisement.jsx":"10","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\services\\CvService.js":"11","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\services\\JobAdvertisementService.js":"12","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\services\\AbilityService.js":"13","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\JobAdvertisementAdd.jsx":"14","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomTextInput.jsx":"15","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomNumberInput.jsx":"16","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomDatePicker.jsx":"17","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomTextArea.jsx":"18","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomSelect.jsx":"19","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\JobAdvertisementOperatinos.jsx":"20"},{"size":535,"mtime":1624305160000,"results":"21","hashOfConfig":"22"},{"size":348,"mtime":1624305160000,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1624305160000,"results":"24","hashOfConfig":"22"},{"size":1329,"mtime":1624865936839,"results":"25","hashOfConfig":"22"},{"size":1010,"mtime":1624876385152,"results":"26","hashOfConfig":"22"},{"size":402,"mtime":1624305160000,"results":"27","hashOfConfig":"22"},{"size":676,"mtime":1624305160000,"results":"28","hashOfConfig":"22"},{"size":11639,"mtime":1624305160000,"results":"29","hashOfConfig":"22"},{"size":3508,"mtime":1624305160000,"results":"30","hashOfConfig":"22"},{"size":2616,"mtime":1624305160000,"results":"31","hashOfConfig":"22"},{"size":178,"mtime":1624305160000,"results":"32","hashOfConfig":"22"},{"size":351,"mtime":1624866845502,"results":"33","hashOfConfig":"22"},{"size":219,"mtime":1624305160000,"results":"34","hashOfConfig":"22"},{"size":4072,"mtime":1624875707970,"results":"35","hashOfConfig":"22"},{"size":533,"mtime":1624866023878,"results":"36","hashOfConfig":"22"},{"size":505,"mtime":1624800159165,"results":"37","hashOfConfig":"22"},{"size":574,"mtime":1624801485968,"results":"38","hashOfConfig":"22"},{"size":521,"mtime":1624802049738,"results":"39","hashOfConfig":"22"},{"size":1223,"mtime":1624870816136,"results":"40","hashOfConfig":"22"},{"size":3118,"mtime":1624878557626,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1fe9ux9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\index.js",[],["92","93"],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\App.js",["94"],"import logo from './logo.svg';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport Navi from './layouts/Navi';\nimport Dashboard from './pages/Dashboard';\n\nfunction App() {\n\n\n\n\n  return (\n\n    <div className=\"App\">\n\n          <Navi></Navi>\n          <Dashboard></Dashboard>\n        </div>\n        );\n}\n\n\n        export default App;\n","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\reportWebVitals.js",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\layouts\\Navi.jsx",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\Dashboard.jsx",["95","96","97","98","99"],"import React from 'react'\nimport { Route } from \"react-router\";\nimport UserProfile from '../pages/UserProfile'\nimport MyApplications from '../pages/MyApplications'\nimport { Card, Icon, Image, Container, GridColumn, Grid } from 'semantic-ui-react'\nimport JobAdvertisement from './JobAdvertisement';\nimport JobAdvertisementAdd from './JobAdvertisementAdd';\nimport JobAdvertisementOperatinos from './JobAdvertisementOperatinos';\nexport default function Dashboard() {\n    return (\n        <div>\n            <Container>\n                    <Route exact path=\"/\" component={UserProfile}/>\n                    <Route exact path=\"/myApplications\" component={MyApplications}/>\n                    <Route exact path=\"/jobAdvertisements\" component={JobAdvertisement}/>\n                    <Route exact path=\"/JobAdvertisementAdd\" component={JobAdvertisementAdd}/>\n                    <Route exact path=\"/JobAdvertisementOperations\" component={JobAdvertisementOperatinos}/>\n            </Container>\n        </div>\n    )\n}\n","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\SignOut.jsx",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\SignIn.jsx",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\UserProfile.jsx",["100","101","102","103","104","105","106","107","108"],"import React, { useState, useEffect } from \"react\";\nimport { Card, Icon, Image, Container, GridColumn, Grid } from 'semantic-ui-react'\nimport '../css/UserProfile.css'\nimport { FaLinkedin, FaGithubSquare, FaInstagram, FaFacebookSquare, FaTwitterSquare, FaGooglePlusSquare, FaEdit } from 'react-icons/fa';\nimport CvService from '../services/CvService';\nimport AbilityService from \"../services/AbilityService\";\n\n\nexport default function UserProfile() {\n\n\n    const [cv, setCv] = useState([]);\n    const [abilities, setAbility] = useState([]);\n\n\n\n    useEffect(() => {\n        let cvService = new CvService()\n        let abilityService = new AbilityService()\n        abilityService.getByJobSeekerId(1).then(result => setAbility(result.data.data));\n        cvService.getByJobSeekerId(1).then(result => setCv(result.data.data));\n\n    }, []);\n\n    function onClickEducation() {\n        return(\n            <div  className=\"modal\">\n\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <span class=\"close\">&times;</span>\n                        <h2>Modal Header</h2>\n                    </div>\n                    <div className=\"modal-body\">\n                        <p>Some text in the Modal Body</p>\n                        <p>Some other text...</p>\n                    </div>\n                    <div className=\"modal-footer\">\n                        <h3>Modal Footer</h3>\n                    </div>\n                </div>\n\n            </div>\n\n);\n\n    }\n\n\n\n    return (\n        <div>\n            <Container>\n                <div id=\"container\">\n                    <div id=\"box\">\n                        <Card className=\"user-profile-card\">\n                            <Image src='https://dyl80ryjxr1ke.cloudfront.net/external_assets/hero_examples/hair_beach_v391182663/original.jpeg'\n                                wrapped ui={false} />\n                            <Card.Content>\n                                <Card.Header>Matthew</Card.Header>\n                                <Card.Meta>\n                                    <span className='date'>Joined in 2015</span>\n                                </Card.Meta>\n                                <Card.Description>\n                                    Matthew is a musician living in Nashville.\n                                </Card.Description>\n                            </Card.Content>\n                            <Card.Content extra>\n\n                            </Card.Content>\n\n                        </Card>\n                        <Grid>\n                            <Grid.Row>\n                                <GridColumn width={16}>\n\n                                    <Card fluid=\"100%\" width={15} className=\"cover-letter-box\">\n                                        <Card.Content header='About You' />\n                                        <a onClick=\"\" ><FaEdit size='30' style={{ float: 'right', margin: '10px' }}></FaEdit></a>\n\n                                        <Card.Content description={cv.coverLetter ? cv.coverLetter.cover_letter_text : \"\"} />\n                                        <Card.Content extra>\n                                        </Card.Content>\n                                    </Card>\n                                </GridColumn>\n                            </Grid.Row>\n                        </Grid>\n\n\n                        <div id=\"education\" >\n\n                            <Grid>\n\n                                <div className='education-card'>\n                                    <Grid>\n                                        <Grid.Row>\n                                            <GridColumn width={15}>\n                                                <h4>Education</h4>\n\n                                            </GridColumn>\n                                            <a onClick={onClickEducation} ><FaEdit size='30' style={{ float: 'right', margin: '10px', color: 'white' }}></FaEdit></a>\n\n\n                                        </Grid.Row>\n                                    </Grid>\n\n\n                                </div>\n                                <Grid.Row>\n\n\n\n\n                                    {cv.educations ? cv.educations.map((education) => (\n\n                                        <GridColumn width={6} >\n\n                                            <Card fluid=\"100%\"\n                                                color='green'\n                                                className=\"item-box-education\"\n                                                href='#card-example-link-card'\n                                                header={education.schoolName}\n                                                description={`${education.graduateYear}`}\n                                            />\n\n                                        </GridColumn>\n                                    )) : \"\"}\n                                </Grid.Row>\n                            </Grid>\n                        </div>\n\n\n                        <Grid>\n                            <div className='experience-card'>\n                                <Grid>\n                                    <Grid.Row>\n                                        <GridColumn width={15}>\n                                            <h4>Experiences</h4>\n\n                                        </GridColumn>\n                                        <a href=\"\" onClick=\"\" ><FaEdit size='30' style={{ float: 'right', margin: '10px', color: 'white' }}></FaEdit></a>\n\n\n                                    </Grid.Row>\n                                </Grid>\n\n\n                            </div>\n                            <Grid.Row>\n                                {cv.experiences > 0 ? cv.experiences.map((ability) => (\n                                    <GridColumn width={4}>\n                                        <Card\n                                            className=\"item-box\"\n                                            color='yellow'\n\n                                            href='#card-example-link-card'\n                                            header='Elliot Baker'\n                                            meta='Friend'\n                                            description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n                                        />\n                                    </GridColumn>\n                                )) :\n                                    <GridColumn width={16}>\n                                        <p style={{ textAlign: 'center' }}>This user has no exist experience</p>\n                                    </GridColumn>\n                                }\n\n\n                            </Grid.Row>\n                        </Grid>\n\n\n\n                        <Grid>\n\n                            <div className='ability-card'>\n                                <Grid>\n                                    <Grid.Row>\n                                        <GridColumn width={15}>\n                                            <h4>Abilities</h4>\n\n                                        </GridColumn>\n                                        <a href=\"\" onClick=\"\" ><FaEdit size='30' style={{ float: 'right', margin: '10px', color: 'white' }}></FaEdit></a>\n\n\n                                    </Grid.Row>\n                                </Grid>\n\n\n                            </div>\n                            <Grid.Row>\n\n                                {cv.abilities ? cv.abilities.map((ability) => (\n\n                                    <GridColumn width={4}>\n\n                                        <Card\n                                            href='#card-example-link-card'\n                                            header={ability.technologyName}\n                                            meta={ability.rating}\n                                            color='blue'\n\n\n                                        />\n                                    </GridColumn>\n                                )) : <GridColumn width={16}>\n                                    <p style={{ textAlign: 'center' }}>This user has no exist ability</p>\n                                </GridColumn>}\n\n                            </Grid.Row>\n                        </Grid>\n\n\n\n                        <Grid>\n\n                            <div className='language-card'>\n                                <Grid>\n                                    <Grid.Row>\n                                        <GridColumn width={15}>\n                                            <h4>Languages</h4>\n\n                                        </GridColumn>\n                                        <a href=\"\" onClick=\"\" ><FaEdit size='30' style={{ float: 'right', margin: '10px', color: 'white' }}></FaEdit></a>\n\n\n                                    </Grid.Row>\n                                </Grid>\n\n\n                            </div>\n                            <Grid.Row>\n\n                                {cv.languages ? cv.languages.map((language) => (\n                                    <GridColumn width={4}>\n\n                                        <Card\n                                            className=\"item-box\"\n\n                                            href='#card-example-link-card'\n                                            header={language.languageName}\n                                            meta={language.rating}\n                                            color='red'\n                                        />\n                                    </GridColumn>\n\n                                )) : <GridColumn width={16}>\n                                    <p style={{ textAlign: 'center' }}>This user has no exist language</p>\n                                </GridColumn>}\n\n\n\n                            </Grid.Row>\n                        </Grid>\n\n                        <Grid>\n                            <div className='social-media-card'>\n                                <Grid>\n                                    <Grid.Row>\n                                        <GridColumn width={15}>\n                                            <h4>Social Media</h4>\n\n                                        </GridColumn>\n                                        <a href=\"\" onClick=\"\" ><FaEdit size='30' style={{ float: 'right', margin: '10px', color: 'white' }}></FaEdit></a>\n\n\n                                    </Grid.Row>\n                                </Grid>\n\n\n                            </div>\n                            <Grid.Row>\n\n                                <GridColumn width={16}>\n                                    {cv.socialMedia ? <a href={cv.socialMedia.gitHub}><FaGithubSquare size=\"50\" color=\"#000\" /></a> : \"\"}\n                                    {cv.socialMedia ? <a href={cv.socialMedia.gitHub}><FaInstagram size=\"50\" color=\"#000\" /></a> : \"\"}\n                                    {cv.socialMedia ? <a href={cv.socialMedia.gitHub}><FaFacebookSquare size=\"50\" color=\"#000\" /></a> : \"\"}\n                                    {cv.socialMedia ? <a href={cv.socialMedia.gitHub}><FaTwitterSquare size=\"50\" color=\"#000\" /></a> : \"\"}\n                                    {cv.socialMedia ? <a href={cv.socialMedia.gitHub}><FaGooglePlusSquare size=\"50\" color=\"#000\" /></a> : \"\"}\n\n\n\n\n\n                                </GridColumn>\n\n\n                            </Grid.Row>\n                        </Grid>\n\n\n                    </div>\n\n\n\n\n\n                </div>\n\n\n\n            </Container>\n\n\n\n        </div>\n    )\n}\n","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\MyApplications.jsx",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\JobAdvertisement.jsx",["109"],"import React, { useEffect, useState } from 'react'\nimport JobAdvertisementService from '../services/JobAdvertisementService'\nimport { Card, Button, Icon, Image, Container, GridColumn, Grid } from 'semantic-ui-react'\n\nexport default function JobAdvertisement() {\n\n    const [jobAdvertisements, setJobAdvertisement] = useState([])\n    useEffect(() => {\n        let jobAdvertisementService = new JobAdvertisementService()\n        jobAdvertisementService.getAllDetail().then(result => setJobAdvertisement(result.data.data))\n    }, [])\n\n    return (\n        <div>\n            <Container>\n                {jobAdvertisements ? jobAdvertisements.map((jobAdvertisement) => (\n                    <Card style={{marginTop:'20px'}} fluid=\"100%\">\n                        <Card.Content>\n                            <Grid>\n                                <Grid.Row>\n                                    <GridColumn width={12}>\n                                        <Card.Header>{jobAdvertisement.jobPosition}</Card.Header>\n                                        <Card.Meta>{jobAdvertisement.companyName}</Card.Meta>\n                                        <Card.Meta>{jobAdvertisement.location}</Card.Meta>\n                                        <Card.Description>\n                                            <strong>{jobAdvertisement.minSalary}- {jobAdvertisement.maxSalary}</strong>\n                                            <br></br>\n                                            <p>{jobAdvertisement.jobDescription}</p>\n\n                                        </Card.Description>\n                                    </GridColumn>\n                                    <GridColumn width={4}>\n                                        <Image\n                                            floated='right'\n                                            size='small'\n                                            src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\n                                        />\n                                    </GridColumn>\n                                </Grid.Row>\n                            </Grid>\n\n\n\n                        </Card.Content>\n\n                        <Card.Content extra>\n                            <div className='ui two buttons'>\n                                <Button basic color='green'>\n                                    Apply\n                                </Button>\n                            </div>\n                        </Card.Content>\n\n                    </Card>\n                )) : <h1>No data</h1>}\n\n            </Container>\n\n        </div>\n    )\n}\n","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\services\\CvService.js",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\services\\JobAdvertisementService.js",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\services\\AbilityService.js",["110"],"import React from 'react'\nimport axios from 'axios'\n\nexport default class AbilityService {\n   \n    getByJobSeekerId(id) {\n        return axios.get('http://localhost:8080/api/abilities/getByJobSeekerId?id='+id)\n    }\n\n}\n","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\JobAdvertisementAdd.jsx",["111","112","113","114"],"import React, { Component, useState } from 'react'\r\nimport { Formik, Form, Field } from \"formik\";\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Label,\r\n    Select,\r\n} from 'semantic-ui-react'\r\n\r\nimport * as Yup from \"yup\";\r\nimport BCustomTextInput from '../utilities/BCustomTextInput'\r\nimport BCustomNumberInput from '../utilities/BCustomNumberInput';\r\nimport BCustomDatePicker from '../utilities/BCustomDatePicker';\r\nimport BCustomTextArea from '../utilities/BCustomTextArea';\r\nimport JobAdvertisementService from '../services/JobAdvertisementService';\r\nimport BCustomSelect from '../utilities/BCustomSelect';\r\nexport default function JobAdvertisementAdd() {\r\n\r\n    const initialValues = { jobPosition: \"\", jobDescription: \"\", maxSalary: \"\", minSalary: \"\", applicationDeadline: \"\", location: \"\",numberOfPosition:\"\",approve :false }\r\n\r\n\r\n    const schema = Yup.object({\r\n        jobPosition: Yup.string().required(\"Job position is required\"),\r\n        jobDescription: Yup.string().required(\"Job description is required\"),\r\n        maxSalary: Yup.number().required(\"Max salary is required\"),\r\n        minSalary: Yup.number().required(\"Min salary is required\"),\r\n        applicationDeadline: Yup.date().required(\"Min Salary is required\"),\r\n        location: Yup.string().required(\"location is required\"),\r\n        numberOfPosition: Yup.number().required(\"number of position is required\"),\r\n        approve: Yup.bool(),\r\n    })\r\n\r\n    function addJobAdvertisement(value) {\r\n        let jobAdvertisementService = new JobAdvertisementService()\r\n        jobAdvertisementService.add(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={schema}\r\n                onSubmit={(values) => {\r\n                    addJobAdvertisement(values)\r\n                }}\r\n            >\r\n                <Form style={{ marginTop: \"15px\" }} className=\"ui form\">\r\n\r\n                    <Label content=\"Job Position\" style={{ marginBottom: \"5px\", float: \"left\" }}></Label>\r\n                    <BCustomTextInput name=\"jobPosition\" placeholder=\"Job Position\" />\r\n\r\n                    <Label content=\"Job Description\" style={{ marginBottom: \"5px\", float: \"left\" }}></Label>\r\n                    <BCustomTextArea name=\"jobDescription\" placeholder=\"Job Description\" />\r\n\r\n                    <Grid widths=\"equal\">\r\n                        <Grid.Row>\r\n                            <Grid.Column width=\"6\">\r\n                                <Label content=\"Max Salary\" style={{ marginBottom: \"5px\", float: \"left\" }}></Label>\r\n                                <BCustomNumberInput name=\"maxSalary\" placeholder=\"Max Salary\" />\r\n                            </Grid.Column>\r\n                            <Grid.Column width=\"6\">\r\n                                <Label content=\"Min Salary\" style={{ marginBottom: \"5px\", float: \"left\" }}></Label>\r\n\r\n                                <BCustomNumberInput name=\"minSalary\" placeholder=\"Min Salary\" />\r\n\r\n                            </Grid.Column>\r\n                            <Grid.Column width=\"4\">\r\n                                <Label content=\"Number Of Position\" style={{ marginBottom: \"5px\", float: \"left\" }}></Label>\r\n\r\n                                <BCustomNumberInput name=\"numberOfPosition\" placeholder=\"Number Of Position\" />\r\n\r\n                            </Grid.Column>\r\n\r\n\r\n                        </Grid.Row>\r\n\r\n\r\n                    </Grid>\r\n                    <Label content=\"Location\" style={{ marginBottom: \"5px\", float: \"left\", marginTop: \"10px\" }}></Label>\r\n                    <BCustomSelect name=\"location\" placeholder=\"Select Location\" ></BCustomSelect>\r\n                    <Label content=\"Application DeadLine\" style={{ marginBottom: \"5px\", float: \"left\" }}></Label>\r\n                    <BCustomDatePicker name=\"applicationDeadline\" placeholder=\"DeadLine\"></BCustomDatePicker>\r\n                    <Button style={{ float: \"left\" }} color=\"blue\" type=\"submit\">Add</Button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n\r\n}\r\n","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomTextInput.jsx",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomNumberInput.jsx",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomDatePicker.jsx",["115"],"import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { DateInput } from 'semantic-ui-calendar-react'\r\nimport { FormField, Label } from 'semantic-ui-react'\r\n\r\nexport default function BCustomDatePicker({...props}) {\r\n    const [field,meta] = useField(props)\r\n    return (\r\n        <FormField>\r\n            <input type=\"date\" {...field} {...props} ></input>\r\n            {meta.touched && !!meta.error ? (\r\n                 <Label pointing basic color=\"red\" content={meta.error}></Label>\r\n                 ):null\r\n             }\r\n        </FormField>\r\n    )\r\n}\r\n","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomTextArea.jsx",[],"C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\utilities\\BCustomSelect.jsx",["116"],"import { Field, useField } from 'formik'\r\nimport React from 'react'\r\nimport { FormField, Label } from 'semantic-ui-react'\r\n\r\nexport default function BCustomSelect({ ...props }) {\r\n    const [field, meta] = useField(props)\r\n\r\n    const countryOptions = [\r\n        { key: 1, value: 'af', text: 'Afghanistan' },\r\n        { key: 2, value: 'ax', text: 'Aland Islands' },\r\n        { key: 3, value: 'al', text: 'Albania' },\r\n        { key: 4, value: 'dz', text: 'Algeria' },\r\n        { key: 5, value: 'as', text: 'American Samoa' },\r\n        { key: 6, value: 'ad', text: 'Andorra' },\r\n        { key: 7, value: 'ao', text: 'Angola' },\r\n\r\n    ]\r\n    function onChange(value) {\r\n        console.log(value)\r\n    }\r\n\r\n    return (\r\n\r\n        <FormField>\r\n\r\n            <select onChange={(e) => onChange(e.target.value)}  {...field} {...props} >\r\n                {countryOptions.map((country) => (\r\n                    <option value={country.text} key={country.key}>{country.text}</option>\r\n                ))}\r\n                {meta.touched && !!meta.error ? (\r\n                    <Label pointing basic color=\"red\" content={meta.error}></Label>\r\n                ) : null}\r\n            </select>\r\n\r\n        </FormField>\r\n\r\n    )\r\n\r\n}\r\n","C:\\Users\\berat\\Documents\\MyProjects\\Human_Resource_Management_System_Frontend_React-main\\react-app\\src\\pages\\JobAdvertisementOperatinos.jsx",["117"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Icon, Label, Menu, Table } from 'semantic-ui-react'\r\nimport JobAdvertisementService from '../services/JobAdvertisementService'\r\n\r\nexport default function JobAdvertisementOperatinos() {\r\n\r\n    const [jobAdvertisements, setJobAdvertisement] = useState([])\r\n\r\n    useEffect(() => {\r\n        let jobAdvertisementService = new JobAdvertisementService()\r\n        jobAdvertisementService.getAllDetail().then(result => (setJobAdvertisement(result.data.data)))\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Table style={{ marginTop: \"80px\" }} celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Company</Table.HeaderCell>\r\n                        <Table.HeaderCell>Position Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Location</Table.HeaderCell>\r\n                        <Table.HeaderCell>Is it Approved</Table.HeaderCell>\r\n\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n\r\n                    {jobAdvertisements ? jobAdvertisements.map((jobAdvertisement) => (\r\n                        <Table.Row>\r\n                            \r\n                            <Table.Cell style={{ color: \"blue\" }}>{jobAdvertisement.companyName}</Table.Cell>\r\n                            <Table.Cell>{jobAdvertisement.jobPosition}</Table.Cell>\r\n                            <Table.Cell>{jobAdvertisement.location}</Table.Cell>\r\n                            {jobAdvertisement.approve === false ? (\r\n                                <Table.Cell style={{ color: \"red\" }} >{jobAdvertisement.approve.toString()}</Table.Cell>\r\n\r\n                            ) : <Table.Cell style={{ color: \"green\" }} >{jobAdvertisement.approve.toString()}</Table.Cell>\r\n                            }                            <Table.Cell>\r\n                                <Button color=\"black\">See Details</Button>\r\n                            </Table.Cell>\r\n\r\n                        </Table.Row>\r\n\r\n                    )) : null}\r\n\r\n\r\n                </Table.Body>\r\n\r\n                <Table.Footer>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell colSpan='3'>\r\n                            <Menu floated='right' pagination>\r\n                                <Menu.Item as='a' icon>\r\n                                    <Icon name='chevron left' />\r\n                                </Menu.Item>\r\n                                <Menu.Item as='a'>1</Menu.Item>\r\n                                <Menu.Item as='a'>2</Menu.Item>\r\n                                <Menu.Item as='a'>3</Menu.Item>\r\n                                <Menu.Item as='a'>4</Menu.Item>\r\n                                <Menu.Item as='a' icon>\r\n                                    <Icon name='chevron right' />\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        </Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Footer>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":12},{"ruleId":"122","severity":1,"message":"126","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":14},{"ruleId":"122","severity":1,"message":"127","line":5,"column":16,"nodeType":"124","messageId":"125","endLine":5,"endColumn":20},{"ruleId":"122","severity":1,"message":"128","line":5,"column":22,"nodeType":"124","messageId":"125","endLine":5,"endColumn":27},{"ruleId":"122","severity":1,"message":"129","line":5,"column":40,"nodeType":"124","messageId":"125","endLine":5,"endColumn":50},{"ruleId":"122","severity":1,"message":"130","line":5,"column":52,"nodeType":"124","messageId":"125","endLine":5,"endColumn":56},{"ruleId":"122","severity":1,"message":"127","line":2,"column":16,"nodeType":"124","messageId":"125","endLine":2,"endColumn":20},{"ruleId":"122","severity":1,"message":"131","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":20},{"ruleId":"122","severity":1,"message":"132","line":13,"column":12,"nodeType":"124","messageId":"125","endLine":13,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":79,"column":41,"nodeType":"135","endLine":79,"endColumn":56},{"ruleId":"133","severity":1,"message":"134","line":101,"column":45,"nodeType":"135","endLine":101,"endColumn":76},{"ruleId":"133","severity":1,"message":"136","line":141,"column":41,"nodeType":"135","endLine":141,"endColumn":64},{"ruleId":"133","severity":1,"message":"136","line":183,"column":41,"nodeType":"135","endLine":183,"endColumn":64},{"ruleId":"133","severity":1,"message":"136","line":224,"column":41,"nodeType":"135","endLine":224,"endColumn":64},{"ruleId":"133","severity":1,"message":"136","line":264,"column":41,"nodeType":"135","endLine":264,"endColumn":64},{"ruleId":"122","severity":1,"message":"127","line":3,"column":24,"nodeType":"124","messageId":"125","endLine":3,"endColumn":28},{"ruleId":"122","severity":1,"message":"137","line":1,"column":8,"nodeType":"124","messageId":"125","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"138","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"139","line":1,"column":28,"nodeType":"124","messageId":"125","endLine":1,"endColumn":36},{"ruleId":"122","severity":1,"message":"140","line":2,"column":24,"nodeType":"124","messageId":"125","endLine":2,"endColumn":29},{"ruleId":"122","severity":1,"message":"141","line":8,"column":5,"nodeType":"124","messageId":"125","endLine":8,"endColumn":11},{"ruleId":"122","severity":1,"message":"142","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":19},{"ruleId":"122","severity":1,"message":"140","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":15},{"ruleId":"122","severity":1,"message":"143","line":2,"column":24,"nodeType":"124","messageId":"125","endLine":2,"endColumn":29},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Icon' is defined but never used.","'Image' is defined but never used.","'GridColumn' is defined but never used.","'Grid' is defined but never used.","'FaLinkedin' is defined but never used.","'abilities' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'React' is defined but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'Field' is defined but never used.","'Select' is defined but never used.","'DateInput' is defined but never used.","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]